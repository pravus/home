#!/site/perl/bin/perl

use strict;
use warnings;

use JSON::XS;

sub G_CONFIG() { $ENV{HOME} . '/.yt-vibrake.rc' }


main(@ARGV);


sub main {
  my $config = _config(G_CONFIG);

  my $json = JSON::XS->new->utf8->pretty->encode($config);
  print $json;
}

sub _config {
  my ($file) = @_;

  open my $fh, '<:encoding(UTF-8)', $file
    or die "open: $file: $!\n";

  my @config;
  while(my $line = <$fh>) {
    s/\A\s+//, s/\s+\z//
      for $line;

    next
      if $line =~ /^(#.*)?$/;

    unless($line =~ /^([pw]):([ckw]+):(.*)$/) {
      warn "config: $file: $.: invalid line\n";
      next;
    }

    my ($type, $groups, $value) = split /:/, $line;

    s/\A\s+//, s/\s+\z//
      for $value;

    my $key = $type eq 'p'
            ? $value
            : '/(^'. $value. ')|(\b'. $value. '\b)|('. $value. '$)/i'
    ;

    if($groups =~ y/c//) {
      push @config, {
        key  => $key,
        type => 'channel',
      };
    }

    if($groups =~ y/k//) {
      push @config, {
        key  => $key,
        type => 'keyword',
      };
    }

    if($groups =~ y/w//) {
      push @config, {
        key  => $key,
        type => 'wildcard',
      };
    }
  }

  close $fh
    or die "close: $file: $!\n";

  return \@config;
}
